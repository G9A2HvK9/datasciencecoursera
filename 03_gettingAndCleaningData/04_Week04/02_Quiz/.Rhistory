req <- GET('api.github.com/users/jtleek/repos')
stop_for_status(req)
content(req)
# Register an application with the Github API here https://github.com/settings/applications. Access the API to get information on your instructors repositories (hint: this is the url you want "https://api.github.com/users/jtleek/repos"). Use this data to find the time that the datasharing repo was created. What time was it created?
library(httr)
library(jsonlite)
oauth_endpoints <- ('github')
github_key <- '1b9145c5a99c707b6e6a'
github_secret <- '0d6c20b94d9a08a3ed08ad0468c4cc1f72334295'
myapp <- oauth_app('github', key = github_key, secret = github_secret)
github_token <- oauth2.0_token(oauth_endpoints('github'), myapp)
gtoken <- config(token = github_token)
req <- GET('api.github.com/users/jtleek/repos')
stop_for_status(req)
content(req)
# Register an application with the Github API here https://github.com/settings/applications. Access the API to get information on your instructors repositories (hint: this is the url you want "https://api.github.com/users/jtleek/repos"). Use this data to find the time that the datasharing repo was created. What time was it created?
library(httr)
library(jsonlite)
oauth_endpoints <- ('github')
github_key <- '1b9145c5a99c707b6e6a'
github_secret <- '0d6c20b94d9a08a3ed08ad0468c4cc1f72334295'
myapp <- oauth_app('github', key = github_key, secret = github_secret)
github_token <- oauth2.0_token(oauth_endpoints('github'), myapp)
gtoken <- config(token = github_token)
req <- GET('api.github.com/users/jtleek/repos')
content(req)
# Register an application with the Github API here https://github.com/settings/applications. Access the API to get information on your instructors repositories (hint: this is the url you want "https://api.github.com/users/jtleek/repos"). Use this data to find the time that the datasharing repo was created. What time was it created?
library(httr)
library(jsonlite)
oauth_endpoints <- ('github')
github_key <- '1b9145c5a99c707b6e6a'
github_secret <- '0d6c20b94d9a08a3ed08ad0468c4cc1f72334295'
myapp <- oauth_app('github', key = github_key, secret = github_secret)
github_token <- oauth2.0_token(oauth_endpoints('github'), myapp)
gtoken <- config(token = github_token)
req <- GET('api.github.com/users/jtleek/repos')
content(req)
?oauth_endpoints
# Register an application with the Github API here https://github.com/settings/applications. Access the API to get information on your instructors repositories (hint: this is the url you want "https://api.github.com/users/jtleek/repos"). Use this data to find the time that the datasharing repo was created. What time was it created?
library(httr)
library(jsonlite)
a2f6251294c3c140f7bbaba80c0ea4180a6ae2de
oauth_endpoints('github')
github_key <- '1b9145c5a99c707b6e6a'
github_secret <- '0d6c20b94d9a08a3ed08ad0468c4cc1f72334295'
myapp <- oauth_app('github', key = github_key, secret = github_secret)
github_token <- oauth2.0_token(oauth_endpoints('github'), myapp)
gtoken <- config(token = github_token)
req <- GET('api.github.com/users/jtleek/repos')
content(req)
# Register an application with the Github API here https://github.com/settings/applications. Access the API to get information on your instructors repositories (hint: this is the url you want "https://api.github.com/users/jtleek/repos"). Use this data to find the time that the datasharing repo was created. What time was it created?
library(httr)
library(jsonlite)
a2f6251294c3c140f7bbaba80c0ea4180a6ae2de
oauth_endpoints('github')
github_key <- '1b9145c5a99c707b6e6a'
github_secret <- '0d6c20b94d9a08a3ed08ad0468c4cc1f72334295'
myapp <- oauth_app('github', key = github_key, secret = github_secret)
github_token <- oauth2.0_token(oauth_endpoints('github'), myapp)
gtoken <- config(token = github_token)
req <- GET('api.github.com/users/jtleek/repos')
content(req)
# Register an application with the Github API here https://github.com/settings/applications. Access the API to get information on your instructors repositories (hint: this is the url you want "https://api.github.com/users/jtleek/repos"). Use this data to find the time that the datasharing repo was created. What time was it created?
library(httr)
library(jsonlite)
a2f6251294c3c140f7bbaba80c0ea4180a6ae2de
oauth_endpoints('github')
github_key <- '6cd6f32e32519f86ecfd'
github_secret <- 'ca835f082f306954100ea4a70f22e19c66012250'
myapp <- oauth_app('github', key = github_key, secret = github_secret)
github_token <- oauth2.0_token(oauth_endpoints('github'), myapp)
gtoken <- config(token = github_token)
req <- GET('api.github.com/users/jtleek/repos')
content(req)
# Register an application with the Github API here https://github.com/settings/applications. Access the API to get information on your instructors repositories (hint: this is the url you want "https://api.github.com/users/jtleek/repos"). Use this data to find the time that the datasharing repo was created. What time was it created?
library(httr)
library(jsonlite)
a2f6251294c3c140f7bbaba80c0ea4180a6ae2de
#oauth_endpoints('github')
#github_key <- '6cd6f32e32519f86ecfd'
#github_secret <- 'ca835f082f306954100ea4a70f22e19c66012250'
#myapp <- oauth_app('github', key = github_key, secret = github_secret)
#github_token <- oauth2.0_token(oauth_endpoints('github'), myapp)
#gtoken <- config(token = github_token)
req <- GET('api.github.com/users/jtleek/repos')
content(req)
# Register an application with the Github API here https://github.com/settings/applications. Access the API to get information on your instructors repositories (hint: this is the url you want "https://api.github.com/users/jtleek/repos"). Use this data to find the time that the datasharing repo was created. What time was it created?
library(httr)
library(jsonlite)
a2f6251294c3c140f7bbaba80c0ea4180a6ae2de
#oauth_endpoints('github')
#github_key <- '6cd6f32e32519f86ecfd'
#github_secret <- 'ca835f082f306954100ea4a70f22e19c66012250'
#myapp <- oauth_app('github', key = github_key, secret = github_secret)
#github_token <- oauth2.0_token(oauth_endpoints('github'), myapp)
#gtoken <- config(token = github_token)
req <- GET('api.github.com/users/jtleek/repos')
req
# Register an application with the Github API here https://github.com/settings/applications. Access the API to get information on your instructors repositories (hint: this is the url you want "https://api.github.com/users/jtleek/repos"). Use this data to find the time that the datasharing repo was created. What time was it created?
library(httr)
library(jsonlite)
a2f6251294c3c140f7bbaba80c0ea4180a6ae2de
#oauth_endpoints('github')
#github_key <- '6cd6f32e32519f86ecfd'
#github_secret <- 'ca835f082f306954100ea4a70f22e19c66012250'
#myapp <- oauth_app('github', key = github_key, secret = github_secret)
#github_token <- oauth2.0_token(oauth_endpoints('github'), myapp)
#gtoken <- config(token = github_token)
req <- GET('api.github.com/users/jtleek/repos')
json1 = content(req)
json2 = jsonlite::fromJSON(toJSON(json1))
# Register an application with the Github API here https://github.com/settings/applications. Access the API to get information on your instructors repositories (hint: this is the url you want "https://api.github.com/users/jtleek/repos"). Use this data to find the time that the datasharing repo was created. What time was it created?
library(httr)
library(jsonlite)
a2f6251294c3c140f7bbaba80c0ea4180a6ae2de
#oauth_endpoints('github')
#github_key <- '6cd6f32e32519f86ecfd'
#github_secret <- 'ca835f082f306954100ea4a70f22e19c66012250'
#myapp <- oauth_app('github', key = github_key, secret = github_secret)
#github_token <- oauth2.0_token(oauth_endpoints('github'), myapp)
#gtoken <- config(token = github_token)
req <- GET('api.github.com/users/jtleek/repos')
json1 = content(req)
json2 = jsonlite::fromJSON(toJSON(json1))
json2
# Register an application with the Github API here https://github.com/settings/applications. Access the API to get information on your instructors repositories (hint: this is the url you want "https://api.github.com/users/jtleek/repos"). Use this data to find the time that the datasharing repo was created. What time was it created?
library(httr)
library(jsonlite)
a2f6251294c3c140f7bbaba80c0ea4180a6ae2de
#oauth_endpoints('github')
#github_key <- '6cd6f32e32519f86ecfd'
#github_secret <- 'ca835f082f306954100ea4a70f22e19c66012250'
#myapp <- oauth_app('github', key = github_key, secret = github_secret)
#github_token <- oauth2.0_token(oauth_endpoints('github'), myapp)
#gtoken <- config(token = github_token)
req <- GET('api.github.com/users/jtleek/repos')
json1 = content(req)
json2 = jsonlite::fromJSON(toJSON(json1))
json2[which(name = 'datasharing')]
# Register an application with the Github API here https://github.com/settings/applications. Access the API to get information on your instructors repositories (hint: this is the url you want "https://api.github.com/users/jtleek/repos"). Use this data to find the time that the datasharing repo was created. What time was it created?
library(httr)
library(jsonlite)
a2f6251294c3c140f7bbaba80c0ea4180a6ae2de
#oauth_endpoints('github')
#github_key <- '6cd6f32e32519f86ecfd'
#github_secret <- 'ca835f082f306954100ea4a70f22e19c66012250'
#myapp <- oauth_app('github', key = github_key, secret = github_secret)
#github_token <- oauth2.0_token(oauth_endpoints('github'), myapp)
#gtoken <- config(token = github_token)
req <- GET('api.github.com/users/jtleek/repos')
json1 = content(req)
json2 = jsonlite::fromJSON(toJSON(json1))
json2[which(name == 'datasharing')]
# Register an application with the Github API here https://github.com/settings/applications. Access the API to get information on your instructors repositories (hint: this is the url you want "https://api.github.com/users/jtleek/repos"). Use this data to find the time that the datasharing repo was created. What time was it created?
library(httr)
library(jsonlite)
a2f6251294c3c140f7bbaba80c0ea4180a6ae2de
#oauth_endpoints('github')
#github_key <- '6cd6f32e32519f86ecfd'
#github_secret <- 'ca835f082f306954100ea4a70f22e19c66012250'
#myapp <- oauth_app('github', key = github_key, secret = github_secret)
#github_token <- oauth2.0_token(oauth_endpoints('github'), myapp)
#gtoken <- config(token = github_token)
req <- GET('api.github.com/users/jtleek/repos')
json1 = content(req)
json2 = jsonlite::fromJSON(toJSON(json1))
json2[which(json2$name == 'datasharing')]
# Register an application with the Github API here https://github.com/settings/applications. Access the API to get information on your instructors repositories (hint: this is the url you want "https://api.github.com/users/jtleek/repos"). Use this data to find the time that the datasharing repo was created. What time was it created?
library(httr)
library(jsonlite)
a2f6251294c3c140f7bbaba80c0ea4180a6ae2de
#oauth_endpoints('github')
#github_key <- '6cd6f32e32519f86ecfd'
#github_secret <- 'ca835f082f306954100ea4a70f22e19c66012250'
#myapp <- oauth_app('github', key = github_key, secret = github_secret)
#github_token <- oauth2.0_token(oauth_endpoints('github'), myapp)
#gtoken <- config(token = github_token)
req <- GET('api.github.com/users/jtleek/repos')
json1 = content(req)
json2 = jsonlite::fromJSON(toJSON(json1))
colnames(json2)
json2[which(json2$name == 'datasharing')]
# Register an application with the Github API here https://github.com/settings/applications. Access the API to get information on your instructors repositories (hint: this is the url you want "https://api.github.com/users/jtleek/repos"). Use this data to find the time that the datasharing repo was created. What time was it created?
library(httr)
library(jsonlite)
a2f6251294c3c140f7bbaba80c0ea4180a6ae2de
#oauth_endpoints('github')
#github_key <- '6cd6f32e32519f86ecfd'
#github_secret <- 'ca835f082f306954100ea4a70f22e19c66012250'
#myapp <- oauth_app('github', key = github_key, secret = github_secret)
#github_token <- oauth2.0_token(oauth_endpoints('github'), myapp)
#gtoken <- config(token = github_token)
req <- GET('api.github.com/users/jtleek/repos')
json1 = content(req)
json2 = jsonlite::fromJSON(toJSON(json1))
colnames(json2)
json2[which(json2$name == 'datasharing'), ]
# Register an application with the Github API here https://github.com/settings/applications. Access the API to get information on your instructors repositories (hint: this is the url you want "https://api.github.com/users/jtleek/repos"). Use this data to find the time that the datasharing repo was created. What time was it created?
library(httr)
library(jsonlite)
a2f6251294c3c140f7bbaba80c0ea4180a6ae2de
#oauth_endpoints('github')
#github_key <- '6cd6f32e32519f86ecfd'
#github_secret <- 'ca835f082f306954100ea4a70f22e19c66012250'
#myapp <- oauth_app('github', key = github_key, secret = github_secret)
#github_token <- oauth2.0_token(oauth_endpoints('github'), myapp)
#gtoken <- config(token = github_token)
req <- GET('api.github.com/users/jtleek/repos')
json1 = content(req)
json2 = jsonlite::fromJSON(toJSON(json1))
colnames(json2)
json2[which(json2$name == 'datasharing'), 'created_at']
download.file(url = 'https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv', destfile = './courses/datasciencecoursera/03_gettingAndCleaningData/02_Week02/americanCommunitySurveyData.csv')
install.packages('sqldf')
acs <- read.csv(file = './courses/datasciencecoursera/03_gettingAndCleaningData/02_Week02/americanCommunitySurveyData.csv', sep = ',')
acs
?sqldf
sqldf('select pwgtp1 from acs where AGEP < 50')
??sqldf
# Register an application with the Github API here https://github.com/settings/applications. Access the API to get information on your instructors repositories (hint: this is the url you want "https://api.github.com/users/jtleek/repos"). Use this data to find the time that the datasharing repo was created. What time was it created?
library(httr)
library(jsonlite)
#oauth_endpoints('github')
#github_key <- 'XXX'
#github_secret <- 'XXX'
#myapp <- oauth_app('github', key = github_key, secret = github_secret)
#github_token <- oauth2.0_token(oauth_endpoints('github'), myapp)
#gtoken <- config(token = github_token)
req <- GET('api.github.com/users/jtleek/repos')
json1 = content(req)
json2 = jsonlite::fromJSON(toJSON(json1))
colnames(json2)
json2[which(json2$name == 'datasharing'), 'created_at']
## Answer: "2013-11-07T13:25:07Z"
library(sqldf)
download.file(url = 'https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv', destfile = './courses/datasciencecoursera/03_gettingAndCleaningData/02_Week02/americanCommunitySurveyData.csv')
acs <- read.csv(file = './courses/datasciencecoursera/03_gettingAndCleaningData/02_Week02/americanCommunitySurveyData.csv', sep = ',')
sqldf('select pwgtp1 from acs where AGEP < 50')
library(sqldf)
install.packages('chron')
install.packages('chron')
library(sqldf)
url <- 'http://biostat.jhsph.edu/~jleek/contact.html'
html <- GET(url)
content <- content(html, as = 'text')
parsedHtml <- htmlParse(content2, asText = TRUE)
parsedHtml
n.readLines(parsedHtml, 1, skip = 10)
?readLines
?nchar
parsedHtml[10]
html[10]
html
nchar(html[10])
html[10]
content[10]
content
nchar(parsedHtml[10])
con <- url('http://biostat.jhsph.edu/~jleek/contact.html')
htmlCode <- readLines(con)
htmlCode[10]
con <- url('http://biostat.jhsph.edu/~jleek/contact.html')
htmlCode <- readLines(con)
nchar(htmlCode[10])
con <- url('http://biostat.jhsph.edu/~jleek/contact.html')
htmlCode <- readLines(con)
nchar(htmlCode[10])
nchar(htmlCode[20])
nchar(htmlCode[30])
nchar(htmlCode[100])
download.file(url = 'https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for', dest = './courses/datasciencecoursera/03_gettingAndCleaningData/02_Week02/noaaData.for')
install.packages('ff')
install.packages('read.fwf')
setRepositories()
install.packages('read.fwf')
file.create(04_workingWithDates.R)
getwd()
setwd('./courses/datasciencecoursera/03_gettingAndCleaningData/04_Week04/01_Lectures/')
file.create('04_workingWithDates.R')
d1 = date()
d1
class(d1)
d2 = Sys.Date()
class(d2)
format(d2, "%a %b %d")
x <- c('1jan1960', '2jan1960', '31mar1960', '30jul1960')
z <- as.Date(x, '%d%b%Y')
z
z[1] - z[2]
as.numeric(z[1] - z[2])
z
z[1] - z[2]
as.numeric(z[1] - z[2])
weekdays(d2)
months(d2)
julian(d2)
library(lubridate)
install.packages('lubridate')
library(lubridate)
ymd('20140108')
mdy('08/04/2013')
dmy('03-04-2013')
ymd_hms('2011-08-03 10:15:03')
ymd_hms('2011-08-03 10:15:03', tz = 'CET')
x = dmy(c('1jan2013', '2jan2013', '31march2013', '30jul2013'))
x
wday(x[1], label = TRUE)
file.create('05_dataRessources.R')
swirl()
library(swirl)
swirl()
Sys.getlocale('LC_TIME')
library(lubridate)
help(package = lubridate)
today()
thiy_day <- today()
this_day <- today()
this_day
month(this_day)
wday(this_day)
wday(this_day, label = TRUE)
this_moment <- now()
this_moment
hour(this_moment)
ymd("1989-05-17")
my_date <- ymd("1989-05-17")
my_date
class(my_date)
ymd("1989 May 17")
mdy("March 12, 1975")
dmy(25081985)
ymd('192012')
ymd('1920-1-2')
dtl
dt1
ymd_hms(dt1)
hms("03:22:14")
dt2
ymd(dt2)
update(this_moment)
update(this_moment, hours = 8, minutes = 34, seconds = 55)
this_moment
this_moment <- update(this_moment, hours = 16, minutes = 09)
this:_moment
this_moment
now(tzone = "America/New_York")
nyc <- now(tzone = "America/New_York")
nyc
nyc + days(2)
depart <- nyc + days(2)
derpart
depart
depart <- update(depart, hours = 17, minutes = 34)
depart
arrive <- depart + hours(15) + minutes(50)
?with_tz
arrive <- with_tz(arrive, 'Asia/Hong_Kong')
arrive
last_time <- mdy('June 17, 2008', tz = "Asia/Singapore")
last_time <- mdy('June 17, 2008', tz = "Singapore")
last_time
?interval
interval(last_time, arrive)
how_long <- interval(last_time, arrive)
as.period(how_long)
stopwatch()
getwd()
setwd('../')
setwd('./02_Quiz/00_Quiz.R')
setwd('./02_Quiz')
file.create('./00_Quiz.R')
library(data.table)
library(lubridate)
library(dplyr)
fileUrl <- 'https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv'
download.file(fileUrl, destfile = './99_Data/ACSData.csv')
d <- fread('./99_Data/ACSData.csv')
View(d)
d
?strsplit
strsplit(d$wgtp)[123]
strsplit(names(d))[123]
strsplit(names(d), 'wgtp')[123]
fileUrl <- 'https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv'
download.file(fileUrl, destfile = './99_Data/GDPData.csv')
?fread
d <- fread('./99_Data/GDPData.csv', nrows = 190, skip = 4)
View(d)
names(d)
d <- fread('./99_Data/GDPData.csv', nrows = 190, skip = 5)
View(d)
colnames(d) = c('code', 'rank', 'empty1', 'name', 'gdpinmillions', 'empty2', 'empty3', 'empty4', 'empty5', 'empty6')
colnames(d)
View(d)
d$gdpinmillions <- gsub(',', '', d$gdpinmillions)
d
d$gdpinmillions <- as.numeric(gsub(',', '', d$gdpinmillions))
d
mean(d, gdpinmillions)
d$gdpinmillions
d$gdpinmillions <- as.integer(d$gdpinmillions)
d$gdpinmillions
mean(d, gdpinmillions)
class(d$gdpinmillions[23])
mean(d$gdpinmillions)
#QUESTION 3:
grep('^[Uu]nited', d$name)
#QUESTION 3:
grep('^[Uu]nited', d$name), 3
#QUESTION 3:
grep('^[Uu]nited', d$name),3
#QUESTION 3:
grep('^[Uu]nited', d$name)
#QUESTION 3:
grep('^United', d$name)
#QUESTION 3:
grep('*United', d$name)
#QUESTION 3:
grepl('*United', d$name)
#QUESTION 3:
grep('*United', d$name, value = TRUE)
#QUESTION 3:
grep('^United', d$name, value = TRUE)
fileUrl1 <- 'https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv'
fileUrl2 <- 'https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv'
download.file(fileUrl1, destfile = './99_Data/GDPData.csv')
download.file(fileUrl2, destfile = './99_Data/educationData.csv')
fileUrl1 <- 'https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv'
fileUrl2 <- 'https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv'
download.file(fileUrl1, destfile = './99_Data/GDPData.csv')
download.file(fileUrl2, destfile = './99_Data/educationData.csv')
gdp <- fread('./99_Data/GDPData.csv', nrows = 190, skip = 5) %>%
colnames = c('code', 'rank', 'empty1', 'name', 'gdpinmillions', 'empty2', 'empty3', 'empty4', 'empty5', 'empty6') %>%
gdpinmillions <- gsub(',', '', d$gdpinmillions) %>%
d$gdpinmillions <- as.integer(d$gdpinmillions)
gdp <- fread('./99_Data/GDPData.csv', nrows = 190, skip = 5) %>%
colnames = c('code', 'rank', 'empty1', 'name', 'gdpinmillions', 'empty2', 'empty3', 'empty4', 'empty5', 'empty6') %>%
gsub(',', '', gdpinmillions) %>%
as.integer(d$gdpinmillions)
gdp <- fread('./99_Data/GDPData.csv', nrows = 190, skip = 5) %>%
colnames = c('code', 'rank', 'empty1', 'name', 'gdpinmillions', 'empty2', 'empty3', 'empty4', 'empty5', 'empty6') %>%
gsub(',', '', gdp$gdpinmillions) %>%
as.integer(gdp$gdpinmillions)
gdp <- fread('./99_Data/GDPData.csv', nrows = 190, skip = 5) %>%
colnames = c('code', 'rank', 'empty1', 'name', 'gdpinmillions', 'empty2', 'empty3', 'empty4', 'empty5', 'empty6')
gdp <- fread('./99_Data/GDPData.csv', nrows = 190, skip = 5)
gdp$colnames = c('code', 'rank', 'empty1', 'name', 'gdpinmillions', 'empty2', 'empty3', 'empty4', 'empty5', 'empty6')
gdp$gdpinmillions <- gsub(',', '', gdp$gdpinmillions)
gdp$gdpinmillions <- as.integer(gdp$gdpinmillions)
gdp <- fread('./99_Data/GDPData.csv', nrows = 190, skip = 5)
colnames(gdp) = c('code', 'rank', 'empty1', 'name', 'gdpinmillions', 'empty2', 'empty3', 'empty4', 'empty5', 'empty6')
gdp$gdpinmillions <- gsub(',', '', gdp$gdpinmillions)
gdp$gdpinmillions <- as.integer(gdp$gdpinmillions)
VIEW(gdp)
View(gdp)
edu <- fread('./99_Data/educationData.csv')
View(edu)
?merge
merged <- merge(edu, gdp, by.x = CountryCode, by.y = code)
merged <- merge(edu, gdp, by.x = edu$CountryCode, by.y = gdp$code)
merged <- merge(edu, gdp, by.x = edu$CountryCode, by.y = gdp$code, all.x = TRUE)
merged <- merge(gdp, edu, by.x = gdp$code, by.y = edu$CountryCode, all.x = TRUE)
merged <- merge(gdp, edu, by.x = gdp$code, by.y = edu$CountryCode)
intersect(names(gdp), names(edu))
colnames(edu)[1]
colnames(edu)[1] <- 'code'
View(edu)
merged <- merge(gdp, edu, by = 'code')
View(merged)
grep(merged$`Special Notes`, '^Fiscal Year')
grep('^Fiscal Year', merged$`Special Notes`)
grep('*Fiscal Year*', merged$`Special Notes`)
grep('*[Ff]iscal [Yy]ear*', merged$`Special Notes`)
grep('*[Ff]iscal [Yy]ear*', merged$`Special Notes`, value = TRUE)
grep('*[Ff]iscal [Yy]ear end: June*', merged$`Special Notes`, value = TRUE)
length(grep('*[Ff]iscal [Yy]ear end: June*', merged$`Special Notes`, value = TRUE))
library(quantmod)
amzn = getSymbols("AMZN",auto.assign=FALSE)
sampleTimes = index(amzn)
install.packages('quantmod')
library(quantmod)
amzn = getSymbols("AMZN",auto.assign=FALSE)
sampleTimes = index(amzn)
sampleTimes
sampleTimes[which(wday == 'Monday')]
sampleTimes <- ymd(sampleTimes)
sampleTimes
class(sampleTimes)
df <- as_data_frame(sampleTimes)
df
df[which(year(value) == 2012)]
df[which(year() == 2012)]
df[which(year(df$value) == 2012)]
?select
select(df, year(value) == 2012)
select(df, year(df$value) == 2012)
names(df)
df[which(df$value == 2012)]
df[which(year(df$value) == 2012)]
df$value[5]
year(df$value[5])
library(quantmod)
amzn = getSymbols("AMZN",auto.assign=FALSE)
sampleTimes = index(amzn)
class(sampleTimes[1])
sampleTimes[1]
year(sampleTimes[1])
years <- lapply(sampleTimes, year)
years
as.list(years)
years[which(years == 2012)]
length(years[which(years == 2012)])
