# plots graph of linear model y
plot(x, y)
# sets seed with integer 1
set.seed(1)
# stores random 100 values from normal distribution with mean 0 and st.dev. 1 in variable x
x <- rnorm(100)
# creates linear predictor model log.mu = a + bx
log.mu <- 0.5 + 0.3 * x
# creates poisson model y ~ Poisson(mu)
y <- rpois(100, exp(log.mu))
# prints summars of y
summary(y)
#Johns Hopkins Data Science Track Coursera
#Course: 2
#Week: 4
#
#User: g9a2hvk9
#email: g9a2hvk9@gmail.com
#github: github.com/g9a2hvk9
#
#
#SIMULATION & PROFILING - SIMULATING A LINEAR MODEL
#
# sets seed with integer 20
set.seed(20)
# stores random 100 values from normal distribution with mean 0 and st.dev. 1 in variable x
x <- rnorm(100)
# stores random 100 values from normal distribution with mean 0 and st.dev. 2 in variable e (standard error)
e <- rnorm(100, 0, 2)
# stores linear model y = a + bx + e
y <- 0.5 + 2 * x + e
# prints summary of linear model y
summary(y)
# plots graph of linear model y
plot(x, y)
# sets seed with integer 10
set.seed(10)
# stores 100 random values from binomial distribution of size 1 and probability 0.5 in variable x
x <- rbinom(100, 1, 0.5)
# stores 100 random values from norma distribution with mean 0 and st.dev. 2 in variable e (stadard error)
e <- rnorm(100, 0, 2)
# stores linear model y = a + bx + e
y <- 0.5 + 2 * x + e
# prints summary of linear model y
summary(y)
# plots graph of linear model y
plot(x, y)
# sets seed with integer 1
set.seed(1)
# stores random 100 values from normal distribution with mean 0 and st.dev. 1 in variable x
x <- rnorm(100)
# creates linear predictor model log.mu = a + bx
log.mu <- 0.5 + 0.3 * x
# creates poisson model y ~ Poisson(mu)
y <- rpois(100, exp(log.mu))
# prints summary of y
summary(y)
# plots graph of poisson model y
plot(x, y)
sample
#Johns Hopkins Data Science Track Coursera
#Course: 2
#Week: 4
#
#User: g9a2hvk9
#email: g9a2hvk9@gmail.com
#github: github.com/g9a2hvk9
#
#
#SIMULATION & PROFILING - RANDOM SAMPLING
#
# ample <- function (x, size, replace = FALSE, prob = NULL)
# {
#         if (length(x) == 1L && is.numeric(x) && is.finite(x) && x >=
#             1) {
#                 if (missing(size))
#                         size <- x
#                 sample.int(x, size, replace, prob)
#         }
#         else {
#                 if (missing(size))
#                         size <- length(x)
#                 x[sample.int(length(x), size, replace, prob)]
#         }
# }
# <bytecode: 0x7ff3c9add578>
#         <environment: namespace:base>
# sets seed with value 1
set.seed(1)
# draws sample of 4 random values from vector 1:10, twice
sample(1:10, 4)
sample(1:10, 4)
#Johns Hopkins Data Science Track Coursera
#Course: 2
#Week: 4
#
#User: g9a2hvk9
#email: g9a2hvk9@gmail.com
#github: github.com/g9a2hvk9
#
#
#SIMULATION & PROFILING - RANDOM SAMPLING
#
# ample <- function (x, size, replace = FALSE, prob = NULL)
# {
#         if (length(x) == 1L && is.numeric(x) && is.finite(x) && x >=
#             1) {
#                 if (missing(size))
#                         size <- x
#                 sample.int(x, size, replace, prob)
#         }
#         else {
#                 if (missing(size))
#                         size <- length(x)
#                 x[sample.int(length(x), size, replace, prob)]
#         }
# }
# <bytecode: 0x7ff3c9add578>
#         <environment: namespace:base>
# sets seed with value 1
set.seed(1)
# draws sample of 4 random values from vector 1:10, twice
sample(1:10, 4)
sample(1:10, 4)
# draws sample of 5 random letters from set "letters"
sample(letters, 5)
# draws random sample of all values in vector 1:10
sample(1:10)
library(swirl)
swirl()
ls()
class(plants)
dim(plants)
nrow(plants)
ncol(plants)
object.size(plants)
names(plants)
head(plants)
head(plants, 10)
tail(plants, 15)
summary(plants)
table(plants$Active_Growth_Period)
str(plants)
num_vect <- c(0.5, 55, -10, 6)
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
?sample
sample(1:6, 4, replace = TRUE)
sample(1:6, 4, replace = TRUE)
sample(1:20, 10)
LETTERS
sample(LETTERS)
sample(c(0,1), 100, prob = c(0.3, 0.7))
sample(c(0,1), 100, prob = c(0.3, 0.7), replace = TRUE)
flips <- sample(c(0,1), 100, prob = c(0.3, 0.7), replace = TRUE)
flips
sumflips
sum(which(flips$1))
sum(flips$1)
sum(flips)
?rbinom
rbinom(1, size = 100, prob = 0.7)
flips2 <- rbinom(100, 1, prob = 0.7)
flips2
sum(flpis2)
sum(flips2)
?rnorm
rnorm(10)
rnorm(10, 100, 25)
rpois(10)
rpois(5, 10)
my_pois <- replicate(100, rpois(5, 10))
my_pois
colMeans(my_pois)
cm <- colMeans(my_pois)
hist(cm)
data(cars)
?cars
head(cars)
plot(cars)
?plot
plot(x = cars$speed, y = cars$dist)
plot(x = cars$dist, y = cars$speed)
?plot
plot(x = cars$dist, y = cars$speed, xlab = "Speed")
plot(x = cars$speed, y = cars$dist, xlab = "Speed")
plot(x = cars$speed, y = cars$dist, xlab = "Speed", ylab = "Stopping Distance")
plot(x = cars$speed, y = cars$dist, ylab = "Stopping Distance")
plot(x = cars$speed, y = cars$dist, xlab = "Speed", ylab = "Stopping Distance")
plot(x = cars$speed, y = cars$dist, xlab = "Speed", ylab = "Stopping Distance", main "My Plot")
plot(x = cars$speed, y = cars$dist, xlab = "Speed", ylab = "Stopping Distance", main = "My Plot")
plot(cars, main = "My Plot")
plot(cars, sub = "My Plot Subtitle")
plot(cars, col = 2)
plot(cars, xlim = c(10, 15)
plot(cars, xlim = c(10, 15))
plot(cars, pch = 2)
data(mtcars)
head(mtcars)
?boxplot
boxplot(formula = mpg - cyl, data = mtcars)
boxplot(formula = mtcars$mpg - mtcars$cyl, data = mtcars)
boxplot(mtcars$mpg - mtcars$cyl, data = mtcars)
boxplot(formula = mpg - cyl, data = mtcars)
boxplot(formula = mpg ~ cyl, data = mtcars)
hist(mtcars$mpg)
outcome <- read.csv(file = './Documents/courses/datasciencecoursera/02_RProgramming/04_Week04/03_Assignment/rprog-data-ProgAssignment3-data/outcome-of-care-measures.csv')
head(outcome)
str(outcome)
outcome <- read.csv(file = './Documents/courses/datasciencecoursera/02_RProgramming/04_Week04/03_Assignment/rprog-data-ProgAssignment3-data/outcome-of-care-measures.csv', colClasses = 'character')
str(outcome)
outcome[Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack] <- as.numeric([outcome$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack])
outcome[Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack] <- as.numeric(outcome[Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack])
outcome$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack <- as.numeric(outcome$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack)
hist(outcome$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack)
outcome <- read.csv(file = './Documents/courses/datasciencecoursera/02_RProgramming/04_Week04/03_Assignment/rprog-data-ProgAssignment3-data/outcome-of-care-measures.csv', colClasses = 'character')
outcome$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack <- as.numeric(outcome$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack)
result1 <- hist(outcome$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack)
result1
hist(result1)
outcome <- read.csv(file = './Documents/courses/datasciencecoursera/02_RProgramming/04_Week04/03_Assignment/rprog-data-ProgAssignment3-data/outcome-of-care-measures.csv', colClasses = 'character')
outcome$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack <- as.numeric(outcome$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack)
hist(outcome$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack)
STATES
best('MA')
outcome <- read.csv(file = './Documents/courses/datasciencecoursera/02_RProgramming/04_Week04/03_Assignment/rprog-data-ProgAssignment3-data/outcome-of-care-measures.csv', colClasses = 'character')
outcome$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack <- as.numeric(outcome$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack)
hist(outcome$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack)
best <- function(state.abbrv, outcome){
results <- read.csv(file = './Documents/courses/datasciencecoursera/02_RProgramming/04_Week04/03_Assignment/rprog-data-ProgAssignment3-data/outcome-of-care-measures.csv', colClasses = 'character')
if(state !%in% outcome$State){ stop('invalid state') }
}
outcome <- read.csv(file = './Documents/courses/datasciencecoursera/02_RProgramming/04_Week04/03_Assignment/rprog-data-ProgAssignment3-data/outcome-of-care-measures.csv', colClasses = 'character')
outcome$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack <- as.numeric(outcome$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack)
hist(outcome$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack)
best <- function(state.abbrv, outcome){
results <- read.csv(file = './Documents/courses/datasciencecoursera/02_RProgramming/04_Week04/03_Assignment/rprog-data-ProgAssignment3-data/outcome-of-care-measures.csv', colClasses = 'character')
if(state %in% outcome$State){ stop('invalid state') }
}
best('MA')
source('~/Documents/courses/datasciencecoursera/02_RProgramming/04_Week04/03_Assignment/Untitled.R')
best('MA')
source('~/Documents/courses/datasciencecoursera/02_RProgramming/04_Week04/03_Assignment/Untitled.R')
source('~/Documents/courses/datasciencecoursera/02_RProgramming/04_Week04/03_Assignment/Untitled.R')
best('MA')
source('~/Documents/courses/datasciencecoursera/02_RProgramming/04_Week04/03_Assignment/Untitled.R')
source('~/Documents/courses/datasciencecoursera/02_RProgramming/04_Week04/03_Assignment/Untitled.R')
source('~/Documents/courses/datasciencecoursera/02_RProgramming/04_Week04/03_Assignment/Untitled.R')
best('MA')
best('TX')
best('USA')
best('OO')
best('HA')
best('HI')
best('NC')
source('~/Documents/courses/datasciencecoursera/02_RProgramming/04_Week04/03_Assignment/Untitled.R')
source('~/Documents/courses/datasciencecoursera/02_RProgramming/04_Week04/03_Assignment/Untitled.R')
source('~/Documents/courses/datasciencecoursera/02_RProgramming/04_Week04/03_Assignment/Untitled.R')
source('~/Documents/courses/datasciencecoursera/02_RProgramming/04_Week04/03_Assignment/Untitled.R')
best('NC', 'pneumonia')
best('NC', 'poop')
best('NC', 'heart attack')
best('NC', 'heartattack')
best('NC', 'heart failure')
best('NC', 'heartfailure')
results <- read.csv(file = './Documents/courses/datasciencecoursera/02_RProgramming/04_Week04/03_Assignment/rprog-data-ProgAssignment3-data/outcome-of-care-measures.csv', colClasses = 'character')
source('~/Documents/courses/datasciencecoursera/02_RProgramming/04_Week04/03_Assignment/Untitled.R')
source('~/Documents/courses/datasciencecoursera/02_RProgramming/04_Week04/03_Assignment/Untitled.R')
best('NC', 'heart attack')
source('~/Documents/courses/datasciencecoursera/02_RProgramming/04_Week04/03_Assignment/Untitled.R')
best('NC', 'heart attack')
split
?split
source('~/Documents/courses/datasciencecoursera/02_RProgramming/04_Week04/03_Assignment/Untitled.R')
source('~/Documents/courses/datasciencecoursera/02_RProgramming/04_Week04/03_Assignment/Untitled.R')
best('NC', 'heart attack')
source('~/Documents/courses/datasciencecoursera/02_RProgramming/04_Week04/03_Assignment/Untitled.R')
best('NC', 'heart attack')
source('~/Documents/courses/datasciencecoursera/02_RProgramming/04_Week04/03_Assignment/Untitled.R')
best('NC', 'heart attack')
source('~/Documents/courses/datasciencecoursera/02_RProgramming/04_Week04/03_Assignment/Untitled.R')
best('NC', 'heart attack')
outcome <- read.csv(file = './Documents/courses/datasciencecoursera/02_RProgramming/04_Week04/03_Assignment/rprog-data-ProgAssignment3-data/outcome-of-care-measures.csv', colClasses = 'character')
outcome$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack <- as.numeric(outcome$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack)
hist(outcome$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack)
best <- function(state.abbrv, outcome){
results <- read.csv(file = './Documents/courses/datasciencecoursera/02_RProgramming/04_Week04/03_Assignment/rprog-data-ProgAssignment3-data/outcome-of-care-measures.csv', colClasses = 'character')
if(!(state.abbrv %in% results$State)){ stop('invalid state') }
valid.outcomes <- c('heart attack', 'heart failure', 'pneumonia')
if(!(outcome %in% valid.outcomes)){ stop('invalid outcome')}
if(outcome == 'heart attack'){
results <- results[results$State == state.abbrv, ]
min.outcome <- min(results$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack)
best.hospital <- results[results$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack == min.outcome]
}
}
source('~/Documents/courses/datasciencecoursera/02_RProgramming/04_Week04/03_Assignment/Untitled.R')
best('NC', 'heart attack')
source('~/Documents/courses/datasciencecoursera/02_RProgramming/04_Week04/03_Assignment/Untitled.R')
best('NC', 'heart attack')
source('~/Documents/courses/datasciencecoursera/02_RProgramming/04_Week04/03_Assignment/Untitled.R')
best('NC', 'heart attack')
source('~/Documents/courses/datasciencecoursera/02_RProgramming/04_Week04/03_Assignment/Untitled.R')
best('NC', 'heart attack')
source('~/Documents/courses/datasciencecoursera/02_RProgramming/04_Week04/03_Assignment/Untitled.R')
best('NC', 'heart attack')
source('~/Documents/courses/datasciencecoursera/02_RProgramming/04_Week04/03_Assignment/Untitled.R')
best('NC', 'heart attack')
source('~/Documents/courses/datasciencecoursera/02_RProgramming/04_Week04/03_Assignment/Untitled.R')
best('NC', 'heart attack')
source('~/Documents/courses/datasciencecoursera/02_RProgramming/04_Week04/03_Assignment/Untitled.R')
best('NC', 'heart attack')
best('TX', 'heart attack')
source('~/Documents/courses/datasciencecoursera/02_RProgramming/04_Week04/03_Assignment/Untitled.R')
best('TX', 'heart attack')
source('~/Documents/courses/datasciencecoursera/02_RProgramming/04_Week04/03_Assignment/Untitled.R')
source('~/Documents/courses/datasciencecoursera/02_RProgramming/04_Week04/03_Assignment/Untitled.R')
source('~/Documents/courses/datasciencecoursera/02_RProgramming/04_Week04/03_Assignment/Untitled.R')
source('~/Documents/courses/datasciencecoursera/02_RProgramming/04_Week04/03_Assignment/Untitled.R')
best('TX', 'heart failure')
source('~/Documents/courses/datasciencecoursera/02_RProgramming/04_Week04/03_Assignment/Untitled.R')
source('~/Documents/courses/datasciencecoursera/02_RProgramming/04_Week04/03_Assignment/Untitled.R')
best('TX', 'heart failure')
source('~/Documents/courses/datasciencecoursera/02_RProgramming/04_Week04/03_Assignment/Untitled.R')
source('~/Documents/courses/datasciencecoursera/02_RProgramming/04_Week04/03_Assignment/Untitled.R')
best('TX', 'heart failure')
source('~/Documents/courses/datasciencecoursera/02_RProgramming/04_Week04/03_Assignment/Untitled.R')
source('~/Documents/courses/datasciencecoursera/02_RProgramming/04_Week04/03_Assignment/Untitled.R')
best('TX', 'heart failure')
source('~/Documents/courses/datasciencecoursera/02_RProgramming/04_Week04/03_Assignment/Untitled.R')
source('~/Documents/courses/datasciencecoursera/02_RProgramming/04_Week04/03_Assignment/Untitled.R')
best('TX', 'heart failure')
source('~/Documents/courses/datasciencecoursera/02_RProgramming/04_Week04/03_Assignment/Untitled.R')
source('~/Documents/courses/datasciencecoursera/02_RProgramming/04_Week04/03_Assignment/Untitled.R')
source('~/Documents/courses/datasciencecoursera/02_RProgramming/04_Week04/03_Assignment/Untitled.R')
best('MD', 'pneumonia')
?min
source('~/Documents/courses/datasciencecoursera/02_RProgramming/04_Week04/03_Assignment/Untitled.R')
best('MD', 'pneumonia')
source('~/Documents/courses/datasciencecoursera/02_RProgramming/04_Week04/03_Assignment/Untitled.R')
source('~/Documents/courses/datasciencecoursera/02_RProgramming/04_Week04/03_Assignment/Untitled.R')
source('~/Documents/courses/datasciencecoursera/02_RProgramming/04_Week04/03_Assignment/Untitled.R')
results
results[results$Hospital.Name == "FORT DUNCAN MEDICAL CENTER"]
results[results$Hospital.Name == "FORT DUNCAN MEDICAL CENTER"]
str(results)
results[results$Hospital.Name]
results[results$Hospital.Name == "FORT DUNCAN MEDICAL CENTER", ]
results[results$Hospital.Name == "FORT DUNCAN MEDICAL CENTER", results$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure]
results[results$Hospital.Name == "FORT DUNCAN MEDICAL CENTER", Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure]
results[results$Hospital.Name == "FORT DUNCAN MEDICAL CENTER", results[Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure]]
results[results$Hospital.Name == "FORT DUNCAN MEDICAL CENTER", results$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure]
results[results$Hospital.Name == "FORT DUNCAN MEDICAL CENTER", 71]
results[results$Hospital.Name == "FORT DUNCAN MEDICAL CENTER", 17]
results[results$Hospital.Name == "FORT DUNCAN MEDICAL CENTER", 18]
results[results$Hospital.Name == "FORT DUNCAN MEDICAL CENTER", 17]
results[results$Hospital.Name == "FORT DUNCAN MEDICAL CENTER", ]
results[results$Hospital.Name == "FORT DUNCAN MEDICAL CENTER", 17]
source('~/Documents/courses/datasciencecoursera/02_RProgramming/04_Week04/03_Assignment/Untitled.R')
best('MD', 'pneumonia')
source('~/Documents/courses/datasciencecoursera/02_RProgramming/04_Week04/03_Assignment/Untitled.R')
source('~/Documents/courses/datasciencecoursera/02_RProgramming/04_Week04/03_Assignment/Untitled.R')
best('MD', 'pneumonia')
source('~/Documents/courses/datasciencecoursera/02_RProgramming/04_Week04/03_Assignment/Untitled.R')
best('MD', 'pneumonia')
source('~/Documents/courses/datasciencecoursera/02_RProgramming/04_Week04/03_Assignment/Untitled.R')
best('MD', 'pneumonia')
source('~/Documents/courses/datasciencecoursera/02_RProgramming/04_Week04/03_Assignment/Untitled.R')
source('~/Documents/courses/datasciencecoursera/02_RProgramming/04_Week04/03_Assignment/Untitled.R')
source('~/Documents/courses/datasciencecoursera/02_RProgramming/04_Week04/03_Assignment/Untitled.R')
best('MD', 'pneumonia')
best('MD', 'heart attack')
source('~/Documents/courses/datasciencecoursera/02_RProgramming/04_Week04/03_Assignment/Untitled.R')
best('MD', 'heart attack')
source('~/Documents/courses/datasciencecoursera/02_RProgramming/04_Week04/03_Assignment/Untitled.R')
best('MD', 'heart attack')
source('~/Documents/courses/datasciencecoursera/02_RProgramming/04_Week04/03_Assignment/Untitled.R')
source('~/Documents/courses/datasciencecoursera/02_RProgramming/04_Week04/03_Assignment/Untitled.R')
best('MD', 'heart attack')
source('~/Documents/courses/datasciencecoursera/02_RProgramming/04_Week04/03_Assignment/Untitled.R')
best('MD', 'heart attack')
source('~/Documents/courses/datasciencecoursera/02_RProgramming/04_Week04/03_Assignment/Untitled.R')
source('~/Documents/courses/datasciencecoursera/02_RProgramming/04_Week04/03_Assignment/Untitled.R')
best('MD', 'heart attack')
source('~/Documents/courses/datasciencecoursera/02_RProgramming/04_Week04/03_Assignment/Untitled.R')
best('BB', 'heart attack')
best('NY', 'hert attack')
source('~/Documents/courses/datasciencecoursera/02_RProgramming/04_Week04/03_Assignment/Untitled.R')
source('~/Documents/courses/datasciencecoursera/02_RProgramming/04_Week04/03_Assignment/Untitled.R')
source('~/Documents/courses/datasciencecoursera/02_RProgramming/04_Week04/03_Assignment/Untitled.R')
best('NY', 'hert attack')
source('~/Documents/courses/datasciencecoursera/02_RProgramming/04_Week04/03_Assignment/Untitled.R')
source('~/Documents/courses/datasciencecoursera/02_RProgramming/04_Week04/03_Assignment/best.R')
best('NY', 'hert attack')
best('BB', 'heart attack')
best('MD', 'heart attack')
best('MD', 'pneumonia')
source('~/Documents/courses/datasciencecoursera/02_RProgramming/04_Week04/03_Assignment/best.R')
rankhospital <- function(state, outcome, num){
results <- read.csv(file = 'courses/datasciencecoursera/02_RProgramming/04_Week04/03_Assignment/rprog-data-ProgAssignment3-data/hospital-data.csv', colClasses = 'character')
if(!(state %in% results$State)){ stop('invalid state') }
if(outcome == 'heart attack'){
results$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack <- as.numeric(results$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack)
results <- results[results$State == state, ]
ordered.data.frame <- results[ order(results$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack, decreasing = FALSE), ]
}
else if(outcome == 'heart failure'){
results$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure <- as.numeric( results$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure)
results <- results[results$State == state, ]
ordered.data.frame <- results[ order(results$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure, decreasing = FALSE), ]
}
else if(outcome == 'pneumonia'){
results$Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia <- as.numeric(results$Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia)
results <- results[results$State == state, ]
}
else(stop('invalid outcome'))
if(num == 'best'){ ordered.data.frame[1, 'Hospital.Name'] }
else if( num == 'worst' ){ ordered.data.frame[nrow(ordered.data.frame), 'Hospital.Name'] }
else if(class(num) == 'numeric'){ ordered.data.frame[num, 'Hospital.Name'] }
else { stop('invalid num')}
}
rankhospital("MN", "heart attack", 5000)
rankhospital("MN", "heart attack", 5000)
rankhospital("MN", "heart attack", 5000)
read.csv(file = '~/Documents/courses/datasciencecoursera/02_RProgramming/04_Week04/03_Assignment/rprog-data-ProgAssignment3-data/hospital-data.cs', colClasses = 'character')
read.csv(file = './Documents/courses/02'
read.csv(file = './Documents/courses/datasciencecoursera/02_RProgramming/04_Week04/03_Assignment/rprog-data-ProgAssignment3-data/hospital-data.csv')
read.csv(file = './Documents/courses/datasciencecoursera/02_RProgramming/04_Week04/03_Assignment/rprog-data-ProgAssignment3-data/hospital-data.csv')
rankhospital <- function(state, outcome, num){
results <- read.csv(file = './Documents/courses/datasciencecoursera/02_RProgramming/04_Week04/03_Assignment/rprog-data-ProgAssignment3-data/hospital-data.csv')
if(!(state %in% results$State)){ stop('invalid state') }
if(outcome == 'heart attack'){
results$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack <- as.numeric(results$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack)
results <- results[results$State == state, ]
ordered.data.frame <- results[ order(results$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack, decreasing = FALSE), ]
}
else if(outcome == 'heart failure'){
results$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure <- as.numeric( results$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure)
results <- results[results$State == state, ]
ordered.data.frame <- results[ order(results$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure, decreasing = FALSE), ]
}
else if(outcome == 'pneumonia'){
results$Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia <- as.numeric(results$Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia)
results <- results[results$State == state, ]
}
else(stop('invalid outcome'))
if(num == 'best'){ ordered.data.frame[1, 'Hospital.Name'] }
else if( num == 'worst' ){ ordered.data.frame[nrow(ordered.data.frame), 'Hospital.Name'] }
else if(class(num) == 'numeric'){ ordered.data.frame[num, 'Hospital.Name'] }
else { stop('invalid num')}
}
rankhospital("MN", "heart attack", 5000)
rankhospital <- function(state, outcome, num){
results <- read.csv(file = './Documents/courses/datasciencecoursera/02_RProgramming/04_Week04/03_Assignment/rprog-data-ProgAssignment3-data/hospital-data.csv', colClasses = 'character')
if(!(state %in% results$State)){ stop('invalid state') }
if(outcome == 'heart attack'){
results$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack <- as.numeric(results$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack)
results <- results[results$State == state, ]
ordered.data.frame <- results[ order(results$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack, decreasing = FALSE), ]
}
else if(outcome == 'heart failure'){
results$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure <- as.numeric( results$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure)
results <- results[results$State == state, ]
ordered.data.frame <- results[ order(results$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure, decreasing = FALSE), ]
}
else if(outcome == 'pneumonia'){
results$Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia <- as.numeric(results$Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia)
results <- results[results$State == state, ]
}
else(stop('invalid outcome'))
if(num == 'best'){ ordered.data.frame[1, 'Hospital.Name'] }
else if( num == 'worst' ){ ordered.data.frame[nrow(ordered.data.frame), 'Hospital.Name'] }
else if(class(num) == 'numeric'){ ordered.data.frame[num, 'Hospital.Name'] }
else { stop('invalid num')}
}
rankhospital("MN", "heart attack", 5000)
source('~/Documents/courses/datasciencecoursera/02_RProgramming/04_Week04/03_Assignment/rankhospital.R')
source('~/Documents/courses/datasciencecoursera/02_RProgramming/04_Week04/03_Assignment/rankhospital.R')
setwd(dir = 'Documents/courses/datasciencecoursera/02_RProgramming/04_Week04/03_Assignment/')
source('~/Documents/courses/datasciencecoursera/02_RProgramming/04_Week04/03_Assignment/rankhospital.R')
source('~/Documents/courses/datasciencecoursera/02_RProgramming/04_Week04/03_Assignment/rankhospital.R')
source('~/Documents/courses/datasciencecoursera/02_RProgramming/04_Week04/03_Assignment/rankhospital.R')
rankhospital("MN", "heart attack", 5000)
source('~/Documents/courses/datasciencecoursera/02_RProgramming/04_Week04/03_Assignment/rankhospital.R')
source('~/Documents/courses/datasciencecoursera/02_RProgramming/04_Week04/03_Assignment/rankhospital.R')
source('~/Documents/courses/datasciencecoursera/02_RProgramming/04_Week04/03_Assignment/rankhospital.R')
rankhospital()
myfile <- rankhospital()
source('~/Documents/courses/datasciencecoursera/02_RProgramming/04_Week04/03_Assignment/rankhospital.R')
rankhospital <- function(state, outcome, num){
file <- read.csv(file = './rprog-data-ProgAssignment3-data/outcome-of-care-measures.csv', colClasses = 'character')
file$
}
source('~/Documents/courses/datasciencecoursera/02_RProgramming/04_Week04/03_Assignment/rankhospital.R')
myfile <- rankhospital()
source('~/Documents/courses/datasciencecoursera/02_RProgramming/04_Week04/03_Assignment/rankhospital.R')
myfile <- rankhospital()
source('~/Documents/courses/datasciencecoursera/02_RProgramming/04_Week04/03_Assignment/rankhospital.R')
source('~/Documents/courses/datasciencecoursera/02_RProgramming/04_Week04/03_Assignment/rankhospital.R')
myfile <- rankhospital()
source('~/Documents/courses/datasciencecoursera/02_RProgramming/04_Week04/03_Assignment/best.R')
best('MD', 'heart attack')
